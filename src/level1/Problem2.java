package level1;

import java.util.ArrayList;
import java.util.List;

public class Problem2 {

    /* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */

    public static void solve() {
        int current = 0;
        List<Integer> sequence = new ArrayList<>();
        //added these two manually because the normal sequence starts with 0, 1, 1, 2
        //and sequence is based on previous two numbers
        sequence.add(1);
        sequence.add(2);
        int sum = 2;

        while (current < 4000000) {
            int size = sequence.size();
            current = sequence.get(size - 1) + sequence.get(size - 2);

            if (current % 2 == 0) {
                sum += current;
            }
            sequence.add(current);
        }

        System.out.println(sum);
    }

}
